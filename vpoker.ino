#include <font4x6.h>
#include <font6x8.h>
#include <font8x8.h>
#include <font8x8ext.h>
#include <fontALL.h>

/*
 * Arduino TV Poker v1.0 by Justin Roeder
 * Poker hand checker script by ProgrammingLogic.com
 * Coin Acceptor https://www.adafruit.com/product/787
 */
#include <EEPROM.h>
#include <TVout.h>
#include <video_gen.h>
#define default_credits -10// set to a negative number to enable coin acceptor
const long saved_game_tag=777;//to erase saved game change this number to anything else
struct SavedGameData{
  long tag;//Used to tell if the game has been saved
  byte bet;//last bet
  long credits; //saved game credits
};
int mode=0;
const char faces[14] = "A23456789TJQKJ";
const char suits[4] = "abcd";
bool panelLights[7]={true,true,false,false,false,false,false};
int blinkState=0;
TVout TV;
int selGame=5;/* defines the default game
0 - none
1 - Jacks or better
2 - double bonus poker
3 - joker poker
4 - double double bonus poker
*/
bool Jackpot,paid,busy,gameStarted;
PROGMEM const unsigned char CONFIRM_CASH_OUT[]={
  128,96,
  0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0x80,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFD,0xF0,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x30,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x18,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x0C,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x0C,0x00,0x00,0x00,0x00,0x63,0xF8,0x07,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x04,0x00,0x00,0x00,0x01,0xE3,0xF9,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x02,0x00,0x00,0x00,0x02,0x13,0xF9,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFC,0x03,0x00,0x00,0x00,0x00,0x13,0xF9,0xFB,0x4E,0x3E,0x1E,0x1F,0xFF,0xFF,
0xFF,0xFC,0x01,0x00,0x00,0x00,0x00,0x03,0xF9,0xFB,0x3D,0xDD,0xED,0xEF,0xFF,0xFF,
0xFF,0xFC,0x00,0x00,0x00,0x00,0x00,0x03,0xF9,0xF3,0x7B,0xED,0xFD,0xFF,0xFF,0xFF,
0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x03,0xF8,0x0F,0x7B,0xEC,0xFC,0xFF,0xFF,0xFF,
0xFF,0xFC,0x00,0x00,0x00,0x00,0x40,0x03,0xF9,0xFF,0x78,0x0E,0x1E,0x1F,0xFF,0xFF,
0xFF,0xC0,0x00,0x00,0x00,0x01,0x80,0x03,0xF9,0xFF,0x7B,0xFF,0xCF,0xCF,0xFF,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x03,0x00,0x03,0xF9,0xFF,0x7B,0xFF,0xEF,0xEF,0xFF,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x07,0x00,0x03,0xF9,0xFF,0x7D,0xCD,0xED,0xEF,0xFF,0xFF,
0xFF,0x00,0x00,0x00,0x00,0x06,0x00,0x03,0xF9,0xFF,0x7E,0x1E,0x1E,0x1F,0xFF,0xFF,
0xFF,0x82,0x00,0x00,0x00,0x3E,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x00,0x07,0x7E,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x00,0x13,0xFE,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x00,0x33,0xFE,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x00,0x3F,0xFE,0x01,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x00,0xFF,0xFF,0x80,0x43,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x01,0xFF,0xFF,0xC0,0x03,0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xFF,
0xFF,0x80,0x00,0x01,0xFF,0xFF,0x00,0x03,0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xEF,
0xFF,0x80,0x00,0x03,0xFF,0xFF,0xC0,0x03,0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFF,0xEF,
0xFF,0x80,0x00,0x03,0xFF,0xFF,0x80,0x03,0xFE,0x1C,0x3E,0x1D,0x1F,0xF1,0xEF,0x43,
0xFF,0x80,0x00,0x07,0xFF,0xFF,0xE0,0x03,0xFD,0xD9,0xDD,0xEC,0xEF,0xEE,0x6F,0x6F,
0xFF,0x80,0x00,0x03,0xFF,0xFF,0xE0,0x03,0xFB,0xFB,0xDD,0xFD,0xEF,0xDF,0x6F,0x6F,
0xFF,0x80,0x00,0x07,0xFF,0xFF,0xE1,0x03,0xFB,0xFF,0x9C,0xFD,0xEF,0xDF,0x6F,0x6F,
0xFF,0x00,0x00,0x0F,0xFF,0xFF,0xF1,0x03,0xFB,0xFC,0x5E,0x1D,0xEF,0xDF,0x6F,0x6F,
0xFF,0x00,0x00,0x1F,0xFF,0xFF,0xF7,0x03,0xFB,0xFB,0xDF,0xCD,0xEF,0xDF,0x6F,0x6F,
0xFE,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0x03,0xFB,0xFB,0xDF,0xED,0xEF,0xDF,0x6F,0x6F,
0xFE,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0x03,0xFD,0xCB,0x9D,0xED,0xEF,0xEE,0x66,0x6F,
0xFE,0x00,0x00,0x03,0xFF,0xBF,0xFE,0x03,0xFE,0x1C,0x4E,0x1D,0xEF,0xF1,0xF1,0x63,
0xFC,0x00,0x00,0x01,0xFF,0x1F,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFC,0x00,0x00,0x01,0xFF,0x1F,0xFF,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0x00,0x00,0x01,0xFC,0x07,0xFF,0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0x00,0x00,0x01,0xF8,0x03,0xFF,0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF8,0x00,0x00,0x01,0xF8,0x03,0xFF,0x80,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF0,0x00,0x00,0x01,0xF8,0x03,0xFF,0x80,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF0,0x00,0x00,0x01,0xF0,0x03,0xFF,0x80,0x1F,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,
0xE0,0x00,0x00,0x01,0xF0,0x03,0xFF,0xC0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,
0xE0,0x00,0x01,0x03,0xF8,0x07,0xFF,0xC0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,
0xC0,0x00,0x03,0xC3,0xF8,0x07,0xFF,0xC0,0x1C,0x3E,0x17,0x0F,0x74,0x7E,0x1C,0x7F,
0xC0,0x00,0x07,0xE1,0xF8,0x0F,0xFF,0xE0,0x19,0xDC,0xE6,0x77,0x73,0xBF,0x7B,0x9F,
0x80,0x00,0x07,0xC3,0xFD,0xBF,0xFF,0xE0,0x1B,0xDD,0xE6,0xF7,0x77,0xBF,0x77,0xDF,
0x80,0x00,0x07,0xC1,0xFD,0xFF,0xFF,0xE0,0x1F,0x9D,0xF7,0xE7,0x77,0xBF,0x77,0xDF,
0x80,0x00,0x07,0xC1,0xFF,0xFF,0xFF,0xF0,0x1C,0x5D,0xF7,0x17,0x77,0xBF,0x77,0xDF,
0x80,0x00,0x03,0xE1,0xFF,0xFF,0xFF,0xF0,0x1B,0xDD,0xF6,0xF7,0x77,0xBF,0x77,0xDF,
0x80,0x00,0x01,0xF1,0xFF,0xFF,0xFF,0xF0,0x1B,0xDD,0xF6,0xF7,0x77,0xBF,0x77,0xDF,
0x00,0x00,0x01,0xF1,0xFF,0xFF,0xFF,0xF0,0x1B,0x9C,0xE6,0xE7,0x77,0xBF,0x7B,0x9F,
0x00,0x00,0x00,0xF0,0xFF,0xFF,0xFF,0xF0,0x1C,0x4E,0x17,0x13,0x77,0xBF,0x1C,0x7F,
0x00,0x00,0x00,0x70,0x0F,0xFF,0xFF,0xF8,0x1F,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x78,0x0F,0xFF,0xFF,0xF8,0x1F,0xFD,0xEF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0xA8,0x0F,0xFF,0xFF,0xF0,0x1F,0xFE,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x68,0x0F,0xFF,0xFF,0xF0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x0C,0x1F,0xFF,0xFF,0xF0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x54,0x00,0x04,0x3F,0xF9,0xFF,0xE0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0xFF,0xC0,0x06,0x3F,0xF0,0x0F,0xE0,0x1F,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,
0x01,0xFF,0xE0,0x00,0x3F,0xE5,0x0F,0xE0,0x1F,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,
0x03,0xFF,0xF0,0x00,0x1E,0x0F,0xCF,0x80,0x1F,0xFF,0xFF,0xF7,0xFF,0xFF,0xFF,0xFF,
0x03,0xFF,0xF0,0x00,0x0E,0x1F,0xFF,0xC0,0x1E,0x3D,0x1F,0x17,0xFF,0xFF,0xFF,0xFF,
0x01,0xFF,0xF8,0x00,0x00,0x3F,0xFF,0xC0,0x1D,0xDC,0xEC,0xE7,0xFF,0xFF,0xFF,0xFF,
0x00,0x7F,0xF8,0x00,0x00,0x3F,0xFF,0xC0,0x1B,0xED,0xED,0xE7,0xFF,0xFF,0xFF,0xFF,
0x00,0xFF,0xFE,0x00,0x00,0x7F,0xFF,0xC0,0x1B,0xED,0xED,0xF7,0xFF,0xFF,0xFF,0xFF,
0x00,0xFF,0xFE,0x00,0x00,0x7F,0xFF,0xE0,0x18,0x0D,0xED,0xF7,0xFF,0xFF,0xFF,0xFF,
0x00,0x3F,0xFE,0x00,0x00,0x7F,0xFF,0xC0,0x1B,0xFD,0xED,0xF7,0xFF,0xFF,0xFF,0xFF,
0x00,0x3F,0xFF,0x80,0x00,0xFF,0xFF,0x80,0x1B,0xFD,0xED,0xF7,0xFF,0xFF,0xFF,0xFF,
0x00,0x3F,0xFF,0xC0,0x01,0xFF,0xFE,0x00,0x1D,0xCD,0xEE,0xE7,0xFF,0xFF,0xFF,0xFF,
0x00,0x3F,0xFF,0xE0,0x00,0x7F,0xFF,0x00,0x1E,0x1D,0xEF,0x17,0xFF,0xFF,0xFF,0xFF,
0x00,0x7F,0xFF,0xF0,0x00,0xFF,0xFF,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x7F,0xFF,0xFC,0x00,0x7F,0xFC,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x7F,0xFF,0xFF,0xE0,0x7F,0xF8,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0xFF,0xFF,0xFF,0xE0,0x7F,0xE8,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0xFF,0xFF,0xFF,0xE0,0x3F,0xE8,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x2F,0xFF,0xFF,0xE0,0x0F,0x40,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x0F,0xFF,0xFF,0xE0,0x02,0x80,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x0F,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x0F,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x0D,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x1C,0x2E,0x1E,0x8C,0x7C,0x7F,0xFF,0xFF,
0x00,0x0D,0xFF,0xFE,0x80,0x00,0x00,0x00,0x19,0xCC,0xEE,0x73,0xBB,0xBF,0xFF,0xFF,
0x00,0x09,0xFF,0xFE,0x00,0x00,0x00,0x00,0x1B,0xCD,0xEE,0xF7,0xB7,0xDF,0xFF,0xFF,
0x00,0x00,0xFF,0xEC,0x00,0x00,0x00,0x00,0x1B,0xEF,0xCE,0xF7,0xB7,0xDF,0xFF,0xFF,
0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x1B,0xEE,0x2E,0xF7,0xB0,0x1F,0xFF,0xFF,
0x00,0x00,0x5E,0x00,0x00,0x00,0x00,0x00,0x1B,0xED,0xEE,0xF7,0xB7,0xFF,0xFF,0xFF,
0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x1B,0xED,0xEE,0xF7,0xB7,0xFF,0xFF,0xFF,
0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x19,0xCD,0xCE,0xF7,0xBB,0x9F,0xFF,0xFF,
0x00,0x00,0x08,0x00,0x00,0x00,0x00,0x00,0x1C,0x2E,0x26,0xF7,0xBC,0x39,0x99,0xFF,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xEF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1B,0xCF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
};
PROGMEM const unsigned char ICON_JACKS_OR_BETTER[]={
  128,96,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x05,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x1F,0xFF,0xE0,0x0F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x01,0xFF,0x00,0x00,0x03,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x0F,0xF0,0x00,0x00,0x01,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xF8,0x00,0x00,0x00,0x30,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xE0,0x00,0x08,0x3F,0xD0,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x01,0xC0,0x00,0xFF,0xFF,0xE0,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x01,0x80,0x07,0x9E,0x6D,0xE0,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x01,0x86,0x7F,0xBF,0x60,0xE0,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x85,0xE3,0x9F,0x60,0xE0,0x60,0x01,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x81,0xF7,0x1F,0x61,0xE0,0x60,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x81,0xF7,0x1F,0x71,0xE0,0x67,0xFF,0x81,0xFF,0xC0,0x00,0x00,0x00,0x00,
0x00,0x01,0x81,0xFB,0x1B,0x73,0xE0,0x7F,0x80,0x00,0x03,0xF0,0x00,0x00,0x00,0x00,
0x00,0x01,0x81,0xFB,0x18,0x7F,0xE0,0x7C,0x03,0xFF,0xC0,0x7C,0x00,0x00,0x00,0x00,
0x00,0x01,0x80,0xFB,0xDF,0xFF,0xE0,0x20,0x7F,0xFF,0xFC,0x1E,0x00,0x00,0x00,0x00,
0x00,0x01,0xC0,0xCB,0xDC,0x01,0x60,0x03,0xFC,0x00,0x3F,0x87,0x00,0x00,0x00,0x00,
0x00,0x01,0xC0,0xE7,0xFD,0xF6,0xE3,0x9F,0x80,0x00,0x03,0xE3,0x80,0x00,0x00,0x00,
0x00,0x00,0xC0,0x7F,0x9E,0x01,0xE1,0xFC,0x80,0x00,0x02,0xF1,0xC0,0x00,0x00,0x00,
0x00,0x00,0xC0,0x70,0xDF,0xF1,0xE0,0x60,0x00,0x00,0x70,0xB8,0xE0,0x00,0x00,0x00,
0x00,0x00,0xE0,0x7A,0x1F,0x31,0xE0,0x20,0x00,0x00,0x1E,0x1C,0x60,0x00,0x00,0x00,
0x00,0x00,0x60,0x7C,0x5F,0xF1,0xE0,0x00,0x00,0x00,0x03,0x1E,0x70,0x00,0x00,0x00,
0x00,0x00,0x60,0x3E,0x5F,0x61,0xE0,0x00,0x00,0x00,0x01,0x8F,0x3C,0x00,0x00,0x00,
0x00,0x00,0x70,0x3E,0x3F,0xC0,0x70,0x00,0x00,0x00,0x00,0x67,0x1F,0x80,0x00,0x00,
0x00,0x00,0x70,0x3C,0x1E,0x00,0x70,0x00,0x00,0x00,0x00,0x27,0x87,0xC0,0x00,0x00,
0x00,0x00,0x30,0x38,0x1F,0x00,0xE0,0x00,0x00,0x0F,0xE0,0x03,0x80,0xE0,0x00,0x00,
0x00,0x00,0x30,0x18,0x0F,0x01,0xE0,0x07,0xCF,0x3E,0xA0,0x00,0xC0,0x60,0x00,0x00,
0x00,0x00,0x38,0x1C,0x08,0x03,0xC7,0xF7,0xDF,0x3F,0xC0,0x00,0x00,0x70,0x00,0x00,
0x00,0x00,0x38,0x10,0x19,0xF8,0x1F,0xF7,0xDF,0x7C,0xC0,0x00,0x70,0x30,0x00,0x00,
0x00,0x00,0x39,0x07,0xC3,0xC8,0x3F,0xF7,0xDE,0x7C,0x00,0x79,0xFC,0x30,0x10,0x00,
0x00,0x00,0x39,0x04,0x43,0xF8,0x73,0xE7,0xFE,0x3F,0xC0,0xFC,0xF4,0x30,0x18,0x00,
0x00,0x00,0x33,0x07,0x43,0xFC,0x76,0x07,0xFC,0x3F,0xE1,0x5E,0xD4,0x30,0x3C,0x00,
0x00,0x00,0x33,0x03,0xC3,0xFC,0x74,0x03,0xFE,0x1F,0xF1,0xCE,0xF8,0x30,0x1A,0x00,
0x00,0x00,0x33,0x83,0xC7,0xBE,0x7C,0x03,0xFE,0x01,0xF1,0xCE,0xF8,0x38,0x3D,0x00,
0x00,0x00,0x33,0x83,0xC7,0x9E,0x7C,0x03,0xFF,0x3F,0xF1,0x7E,0xD4,0x18,0x3E,0x00,
0x00,0x70,0x33,0x83,0xC7,0xBE,0x7E,0x63,0xFF,0xBF,0x20,0xA4,0xCC,0x18,0x3C,0x00,
0x00,0x20,0x33,0x83,0xE7,0xFF,0x3F,0xF3,0xCA,0xA0,0xC0,0x78,0x00,0x18,0x18,0x00,
0x00,0x10,0x33,0x83,0xE7,0xFF,0x2F,0x6A,0x25,0xDF,0x00,0x00,0x00,0x38,0x3F,0x00,
0x00,0x10,0x33,0x9F,0xEF,0xF0,0x90,0x13,0xE6,0x00,0x00,0x00,0x10,0x38,0x3F,0x80,
0x00,0x20,0x33,0x93,0x48,0x88,0x8F,0xE0,0x00,0x00,0x00,0x00,0x00,0x38,0x3F,0x00,
0x00,0x20,0x33,0x90,0xCF,0x8E,0x00,0x00,0x00,0x00,0x00,0x03,0xF0,0x18,0x3F,0x00,
0x00,0xF8,0x33,0x9F,0x80,0x00,0x00,0x00,0x00,0x00,0x3F,0x9F,0xFC,0x18,0x1F,0x80,
0x00,0x60,0x31,0x80,0x00,0x00,0x00,0x00,0x03,0xFB,0xFF,0x9F,0xFE,0x1C,0x0F,0x80,
0x00,0x60,0x31,0x40,0x00,0x00,0x00,0x3F,0x7F,0xFB,0xFF,0x9F,0xFE,0x1C,0x63,0x80,
0x00,0x78,0x39,0x60,0x00,0x03,0xF7,0xFF,0x7F,0xFB,0xFF,0x9F,0xFE,0x0D,0xFB,0xC0,
0x00,0x78,0x18,0x40,0x00,0x7F,0xF7,0xFF,0x7F,0xD9,0xFC,0x1F,0x1E,0x0B,0xFC,0xC0,
0x00,0x28,0x18,0x9F,0xF8,0x7F,0xF7,0xF0,0xF9,0xF1,0xF0,0x1F,0x7E,0x0F,0xFE,0x00,
0x00,0x38,0x18,0x1F,0xFE,0x7C,0x57,0xB7,0x05,0x41,0xFF,0x1F,0xFE,0x0F,0xFF,0x00,
0x00,0x18,0x1C,0x1F,0xFE,0x7F,0xF0,0xA0,0x05,0x41,0xFF,0x1F,0xFC,0x0F,0xFF,0x80,
0x00,0x2C,0x0C,0x0F,0xFE,0x7C,0x00,0xB4,0x04,0x41,0xFF,0x1F,0xFC,0x1F,0xFF,0xC0,
0x00,0x20,0x0E,0x0F,0x3E,0x7F,0xE0,0xA4,0x05,0x41,0xFC,0x1F,0xFE,0x3F,0xFD,0xE0,
0x00,0x18,0x06,0x0F,0xFC,0x7F,0x20,0x64,0x04,0x41,0xF1,0xDF,0x3E,0x7F,0xFC,0xF0,
0x00,0x00,0x06,0x0F,0xFC,0x3F,0xE0,0x44,0x04,0x41,0xFF,0xCF,0x39,0xFF,0xFB,0xF8,
0x00,0x00,0x07,0x0F,0xFF,0x3F,0xC0,0x44,0x05,0xC1,0xFF,0xC8,0x91,0xF9,0xF7,0x1C,
0x00,0x00,0x03,0x0F,0x9F,0x3E,0x10,0x74,0x04,0x41,0x04,0x4F,0x8B,0xFB,0xEE,0x1E,
0x00,0x00,0x03,0x0F,0x9F,0xBF,0xF8,0x44,0x04,0x21,0x7F,0xC0,0x07,0xFB,0xDE,0x1F,
0x00,0x00,0x03,0x0F,0xBF,0xBE,0xE8,0x44,0x07,0xE0,0x00,0x00,0x0F,0xF9,0x9C,0x03,
0x00,0x00,0x03,0x0F,0xFF,0x20,0x08,0x7C,0x00,0x00,0x00,0x00,0x1F,0xFC,0x3C,0x01,
0x00,0x00,0x03,0x08,0x03,0x27,0xF8,0x00,0x00,0x00,0x00,0x32,0x3F,0xFF,0xFC,0x01,
0x00,0x00,0x03,0x00,0x3C,0x30,0x00,0x00,0x00,0x00,0x01,0xE8,0x7F,0xFF,0xF8,0x03,
0x00,0x00,0x03,0x06,0x00,0x00,0x03,0x00,0x00,0x00,0x1F,0xF0,0xFF,0xEF,0xFE,0x07,
0x00,0x00,0x03,0x00,0x00,0x00,0x0E,0x0F,0xFF,0xFF,0xFC,0xC1,0xFF,0xE7,0xFF,0x1F,
0x00,0x00,0x03,0x80,0x06,0x00,0x39,0x00,0xFF,0xFF,0x86,0x01,0xFF,0xE3,0xFF,0xFF,
0x00,0x00,0x01,0x80,0x03,0xFF,0xE0,0x00,0x80,0x03,0xC0,0x03,0xFF,0xEF,0xFF,0xFF,
0x00,0x00,0x01,0x80,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x07,0xFF,0xC7,0xFF,0xFE,
0x00,0x00,0x01,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0x8F,0xFF,0xFC,
0x00,0x00,0x00,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF8,0x3F,0xFF,0xF8,
0x00,0x00,0x00,0x3F,0xC0,0x00,0x00,0x60,0x00,0x00,0x01,0xFF,0xF8,0x7F,0xFF,0x78,
0x00,0x00,0x00,0x00,0xE0,0x00,0x01,0xFF,0x00,0x00,0x7F,0xEF,0xF8,0xFF,0xFF,0x38,
0x00,0x00,0x00,0x00,0x78,0x00,0x07,0xFF,0xFF,0xFF,0xFF,0x07,0xF9,0xFE,0xFE,0x1C,
0x00,0x00,0x00,0x00,0x3F,0x00,0x0F,0x01,0xF3,0xFF,0xC0,0x03,0xFB,0xFC,0xFC,0xFE,
0x00,0x00,0x00,0x00,0x0F,0xFE,0x44,0x00,0x00,0x00,0x00,0x01,0xFF,0xFD,0xF9,0xFF,
0x1F,0x80,0x00,0x00,0x00,0xFE,0x00,0x38,0x00,0x00,0x00,0x00,0xFF,0xFD,0xE3,0xFF,
0x1F,0x80,0x00,0x00,0x00,0xE0,0x00,0x38,0x00,0x00,0x00,0x00,0x7F,0xFC,0xC7,0xFF,
0x1F,0xBC,0xF3,0xEF,0x87,0xE7,0x8F,0x38,0x00,0x00,0x00,0x00,0x7F,0xFE,0x1F,0x03,
0x1F,0xBD,0xFB,0xEF,0x87,0xEF,0xDF,0xB8,0x00,0x00,0x00,0x00,0xFF,0xFF,0xF8,0x03,
0x1F,0xB9,0xFB,0x8E,0x07,0xEF,0xDF,0xB8,0x00,0x00,0x00,0x03,0xFF,0xFF,0xF8,0x03,
0x1C,0x39,0xF9,0xE7,0x87,0xEF,0xCF,0xB8,0x00,0x00,0x00,0x07,0xFF,0xEF,0xF0,0x07,
0x1C,0x39,0xC0,0xE3,0x87,0xEE,0x1F,0xB8,0x00,0x00,0x00,0x0F,0xFF,0xD7,0xF8,0x07,
0x1C,0x39,0xFB,0xEF,0x87,0xEF,0xDF,0xBB,0xFE,0x00,0x00,0x1F,0xFF,0xD3,0xFE,0x07,
0x1C,0x38,0xF3,0xEF,0x87,0xE7,0x9F,0xBB,0xFE,0x00,0x00,0x3F,0xFF,0xDD,0xF1,0x0F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0x8A,0xFB,0x0F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF6,0x02,0x7B,0x9F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0xF0,0x01,0x7F,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0,0x1C,0x3F,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xE0,0x3E,0x9F,0xFC,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x39,0x6F,0xF8,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE0,0x3D,0x3F,0xF0,

};

PROGMEM const unsigned char suitFont[] = {
10,12,0x61,
0x00,0x00,
0x00,0x00,
0x1C,0x00,
0x1C,0x00,
0x7F,0x00,
0x7F,0x80,
0xFF,0x80,
0x77,0x80,
0x08,0x00,
0x3E,0x00,
0x00,0x00,
0x00,0x00,
//clubs
0x00,0x00,
0x00,0x00,
0x08,0x00,
0x18,0x00,
0x1C,0x00,
0x3E,0x00,
0x3E,0x00,
0x7F,0x00,
0x7F,0x00,
0x3E,0x00,
0x1C,0x00,
0x18,0x00,
//diamonds
0x00,0x00,
0x00,0x00,
0x00,0x00,
0x36,0x00,
0x3E,0x00,
0x3E,0x00,
0x3E,0x00,
0x1C,0x00,
0x18,0x00,
0x08,0x00,
0x00,0x00,
0x00,0x00,
//hearts
0x00,0x00,
0x08,0x00,
0x1C,0x00,
0x3E,0x00,
0x7F,0x00,
0x7F,0x00,
0x7F,0x00,
0x23,0x00,
0x08,0x00,
0x7F,0x00,
0x00,0x00,
0x00,0x00,
//spades
};
SavedGameData saved;
class Card{
    public:
    bool hold;
    int suit;
    int rank;
};
Card playerHand[5]; 
PROGMEM const unsigned char jackpot1[] ={
  128,96,
  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0x82,0x08,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0x82,0x08,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0x82,0x08,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0x82,0x08,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0x82,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xC1,0x86,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x92,0x24,0xC9,0x12,0x40,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0x92,0x24,0xC9,0x12,0x60,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x92,0x24,0xC9,0x92,0x40,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x43,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x63,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x09,0x41,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x39,0x83,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x7B,0x9F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x73,0xDF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x63,0xBF,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x4F,0x87,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xC1,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x13,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x27,0xA2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0xC0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x81,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x03,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x00,0x02,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x02,0x04,0x00,0x04,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x82,0x00,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x00,0x20,0x40,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x80,0x60,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x40,0x40,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x20,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x06,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x06,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x0B,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x23,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x43,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3C,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
PROGMEM const unsigned char ICON_DOUBLE_BONUS[] ={
  128,96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x0F,0xF8,0x07,0xC7,0xF7,0xDF,0xF1,0xFC,0x1F,0xF8,0x00,0x00,0x01,
0x00,0x00,0x00,0x1F,0xFE,0x1F,0xE7,0xFF,0xFF,0xFB,0xFE,0x3F,0xFC,0x00,0x00,0x01,
0x00,0x00,0x00,0x18,0x06,0x38,0x3C,0x08,0x20,0x1E,0x02,0x20,0x06,0x00,0x00,0x01,
0x00,0x00,0x00,0x17,0xF3,0x67,0x9B,0xE3,0x8F,0xE6,0xFA,0x6F,0xF6,0x00,0x00,0x01,
0x00,0x00,0x00,0x17,0xFD,0x4F,0xDB,0xE7,0x9F,0xF7,0xFA,0x5F,0xFE,0x00,0x00,0x01,
0x00,0x00,0x00,0x33,0x9D,0xDC,0xE9,0xC3,0x0E,0x7E,0xE6,0x4E,0x3E,0x00,0x00,0x01,
0x00,0x00,0x00,0x1B,0x6D,0xBB,0x6D,0xBA,0xED,0xB6,0xEE,0x6E,0x1E,0x00,0x00,0x01,
0x00,0x00,0x00,0x17,0x6D,0x37,0x6B,0xBA,0xED,0xB6,0xFC,0x2D,0x5E,0x00,0x00,0x01,
0x00,0x00,0x00,0x16,0xED,0x75,0x6B,0xB7,0xDC,0x76,0xD0,0x7C,0xA6,0x00,0x00,0x01,
0x00,0x00,0x00,0x16,0xAD,0x6D,0x6B,0x75,0x5F,0xEE,0xD2,0x5F,0xAC,0x00,0x00,0x01,
0x00,0x00,0x00,0x36,0xAC,0xEB,0x6B,0x55,0x5F,0xCD,0xD7,0x5F,0xBC,0x00,0x00,0x01,
0x00,0x00,0x00,0x2F,0xFC,0xEA,0xE7,0x75,0xF8,0xED,0xBD,0xD9,0x78,0x00,0x00,0x01,
0x00,0x00,0x00,0x2D,0xDA,0xFA,0xE7,0x6B,0xBB,0x6D,0xB8,0xF9,0x4C,0x00,0x00,0x01,
0x00,0x00,0x00,0x2D,0xDA,0xDC,0xD6,0xEA,0xB7,0xED,0xBA,0xBD,0x34,0x00,0x00,0x01,
0x00,0x00,0x00,0xFD,0xBA,0xDD,0xD6,0xEB,0xB6,0xEB,0xE6,0xB6,0x6C,0x00,0x00,0x01,
0x00,0x00,0x00,0xDC,0x76,0xE3,0xBE,0x1B,0x71,0xD3,0x0D,0x70,0xE8,0x00,0x00,0x01,
0x00,0x00,0x01,0xBC,0xEF,0x77,0x77,0x36,0xFF,0xC7,0xBC,0xF9,0xD8,0x00,0x00,0x01,
0x00,0x00,0x01,0x7F,0xDD,0x7E,0x77,0xEE,0xFF,0xAF,0xFA,0xFF,0xD0,0x00,0x00,0x01,
0x00,0x00,0x01,0x00,0x39,0x91,0xD9,0x8E,0x00,0x60,0x02,0x00,0x30,0x00,0x00,0x01,
0x00,0x00,0x01,0xFF,0xF0,0xC3,0x9C,0x3B,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x01,
0x00,0x00,0x01,0xFF,0xE0,0xFF,0x0F,0xF3,0xFF,0xBF,0xFF,0xFF,0xE0,0x00,0x00,0x01,
0x00,0x00,0x00,0xFF,0x00,0x3E,0x03,0xE1,0xFE,0x1F,0xF9,0xFF,0xC0,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x01,
0x00,0x00,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x39,0x00,0x00,0x01,
0x00,0x00,0x00,0x1E,0x00,0x00,0x78,0x00,0x00,0x00,0x07,0x03,0xBD,0x80,0x00,0x01,
0x00,0x00,0x00,0x7C,0xFF,0xE1,0xFE,0xFF,0xFF,0xFF,0xFF,0xF3,0xFF,0x80,0x00,0x01,
0x00,0x00,0x00,0xFD,0xFF,0xF3,0x87,0xFF,0xFF,0xFF,0xF8,0xFB,0xFB,0xC0,0x00,0x01,
0x00,0x00,0x03,0xFD,0x00,0x16,0x01,0x01,0x00,0x00,0x10,0x0B,0xD7,0xD0,0x00,0x01,
0x00,0x00,0x07,0xFD,0x3D,0x9C,0x79,0x3C,0x69,0x32,0x47,0x2B,0xDD,0xB8,0x00,0x01,
0x00,0x00,0x07,0xFD,0x7F,0x4C,0xB4,0x34,0x79,0xF3,0xCB,0xE9,0xEF,0xC8,0x00,0x01,
0x00,0x00,0x03,0xFD,0x37,0xA9,0xCE,0x3A,0x30,0xE1,0x8C,0xED,0xFD,0xB8,0x00,0x01,
0x00,0x00,0x03,0xFD,0x18,0x63,0x87,0x16,0x20,0xE1,0x98,0x65,0xDB,0xBC,0x00,0x01,
0x00,0x00,0x06,0xFD,0x98,0x63,0xB7,0x56,0x26,0x8C,0x19,0x25,0xF7,0xFC,0x00,0x01,
0x00,0x00,0x0F,0xFE,0x9B,0x63,0x33,0x17,0x26,0x8C,0x1C,0x15,0xAF,0xFC,0x00,0x01,
0x00,0x00,0x1F,0xF6,0x98,0x67,0x73,0x97,0x26,0xEC,0x1A,0x05,0xDF,0xDE,0x00,0x01,
0x00,0x00,0x13,0xF6,0x98,0xE7,0x5A,0x93,0xA6,0xEC,0x13,0xCD,0x3F,0xCE,0x00,0x01,
0x00,0x00,0x1F,0xFE,0x97,0x45,0x4A,0x92,0xA6,0x8C,0x0D,0x64,0xFF,0xCE,0x00,0x01,
0x00,0x00,0x0D,0xFE,0x97,0xA5,0x4A,0x91,0xA6,0xCD,0x2E,0x76,0xFF,0xCF,0x00,0x01,
0x00,0x00,0x1D,0xFE,0x98,0x67,0x4B,0x91,0xA6,0xED,0x03,0xD2,0xFF,0xFF,0x00,0x01,
0x00,0x00,0x1F,0xFE,0x9B,0x77,0x5B,0x95,0xA6,0xEC,0x80,0x52,0xFF,0xFF,0x00,0x01,
0x00,0x00,0x1B,0x7E,0x9B,0x53,0x33,0x14,0xA6,0xAC,0x90,0x32,0xFB,0xFF,0x00,0x01,
0x00,0x00,0x3F,0xFC,0x9B,0x53,0x33,0x56,0xE6,0xAD,0x93,0xB2,0xF3,0xFF,0x00,0x01,
0x00,0x00,0x25,0xFD,0x98,0x73,0x85,0x12,0xE6,0xA1,0x18,0x36,0xF3,0xFC,0x00,0x01,
0x00,0x00,0x3E,0xFD,0x18,0xE1,0x8E,0x10,0x66,0x21,0x0C,0x35,0xFF,0xF8,0x00,0x01,
0x00,0x00,0x1B,0xFD,0x73,0xA5,0x7E,0x39,0x66,0x7F,0x4F,0xE4,0xBF,0xF0,0x00,0x01,
0x00,0x00,0x0F,0x7D,0x7F,0xCC,0xFC,0x39,0x25,0x3E,0x6A,0xCD,0x7F,0xE0,0x00,0x01,
0x00,0x00,0x17,0xFD,0x00,0x1E,0x01,0x01,0x05,0x00,0xE0,0x89,0xDE,0xC0,0x00,0x01,
0x00,0x00,0x1B,0xF5,0x00,0x33,0x03,0x83,0x8D,0xC1,0xE0,0x18,0x0E,0x80,0x00,0x01,
0x00,0x00,0x16,0xCD,0xFF,0xF1,0xFF,0xFF,0xF8,0xFF,0xBF,0xF0,0x0F,0x00,0x00,0x01,
0x00,0x00,0x15,0x7C,0xFF,0xC0,0xFC,0xFE,0x70,0x7F,0x1F,0xE0,0x0E,0x00,0x00,0x01,
0x00,0x00,0x1F,0xAA,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x01,
0x00,0x00,0x07,0xD4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0xED,0xFF,0x81,0xF9,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x1B,0xFF,0xE7,0xBF,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x02,0x00,0x66,0x07,0x00,0x00,0x00,0x80,0x18,0x00,0x00,0x00,0x01,
0x00,0x00,0x78,0x82,0x00,0x3C,0x62,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x00,0x01,
0x00,0x00,0x7B,0xD2,0x7F,0x99,0xF8,0x7D,0xF3,0xFF,0x3F,0xE4,0x07,0x9E,0x00,0x01,
0x00,0x90,0x1D,0xF2,0x5E,0xD3,0xFC,0x79,0x73,0xFD,0x3F,0xF6,0x07,0xDC,0x00,0x01,
0x01,0x40,0x18,0xC2,0x31,0x43,0x1C,0x30,0xC0,0xC3,0x14,0x72,0x0F,0x90,0x0D,0x01,
0x00,0x30,0xE2,0x23,0x30,0xC7,0x0A,0xA0,0x8C,0xC1,0x94,0x3A,0xE2,0x00,0x02,0x81,
0x03,0x7F,0xF4,0x01,0xB2,0x82,0x6A,0xB1,0x9C,0xC4,0x95,0xAA,0xE7,0x8F,0x1C,0x81,
0x01,0x0C,0x31,0x41,0xB2,0xCE,0xE6,0x33,0x34,0xC0,0x1D,0x2A,0xC4,0xDE,0x7F,0x41,
0x02,0xA1,0x73,0xE4,0xB0,0xCE,0xA7,0x33,0x24,0xC8,0x5C,0x72,0x20,0x00,0x30,0x01,
0x01,0x49,0x00,0x20,0xB1,0xCA,0xB5,0x35,0x24,0xF9,0xDC,0xF6,0xC3,0xCD,0xA1,0x01,
0x06,0x83,0x60,0x00,0xBE,0xCA,0x95,0x26,0xB4,0xB9,0xD3,0x24,0xC7,0x80,0x7A,0x01,
0x02,0xB8,0xF1,0xC4,0xBF,0x8E,0x95,0x29,0x94,0xC9,0x53,0x4C,0x00,0x4E,0xC0,0x61,
0x01,0x7C,0x32,0xC0,0xB0,0x2E,0xB7,0x39,0x54,0xC0,0x1D,0x4D,0xC0,0x0E,0x3D,0x41,
0x02,0x1D,0x14,0xC0,0xA0,0x6E,0xE6,0x31,0x4C,0xC0,0x9C,0xEC,0x02,0x08,0xFE,0x81,
0x00,0x07,0x60,0x21,0xB3,0xE6,0x66,0x30,0xCC,0xC0,0x9C,0xE6,0x03,0x80,0xB1,0x41,
0x07,0x0E,0xF3,0xC3,0xB3,0xA6,0x4A,0xB2,0xE4,0xD1,0x9C,0x73,0x44,0x16,0xE8,0x01,
0x07,0x1E,0x60,0xE2,0x31,0x37,0x0C,0x30,0xE0,0xC3,0x1C,0x71,0x08,0x0E,0x71,0xE1,
0x00,0x1E,0x20,0x22,0x79,0x13,0x9C,0x68,0x99,0x67,0x2C,0x39,0x03,0x80,0x79,0xC1,
0x03,0x24,0xE0,0x02,0x7D,0x19,0x78,0x7D,0x7B,0xFF,0x3E,0x3D,0x06,0x86,0x78,0x81,
0x00,0x09,0xE1,0xD2,0x01,0x08,0xF2,0x00,0x00,0x00,0x00,0x01,0x00,0x07,0x64,0x80,
0x00,0x00,0x00,0xE2,0x01,0x0C,0x06,0x00,0x00,0x00,0x00,0x81,0x00,0x0F,0x98,0x00,
0x00,0x00,0x00,0x03,0xFF,0x07,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0x07,0x00,0x00,0x00,
0x00,0x00,0x01,0xE1,0xFE,0x03,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0x20,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x07,0x80,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01
};
PROGMEM const unsigned char jackpot2[] ={
  128,96,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x03,0xC3,0x04,0x18,0x60,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x03,0xC3,0x04,0x18,0x60,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x03,0xC3,0x04,0x18,0x60,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x03,0xC3,0x04,0x18,0x60,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x03,0xC3,0x06,0x18,0x60,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x01,0x22,0x48,0x90,0x24,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x01,0x36,0x4D,0x93,0x26,0xC0,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x01,0x22,0x4C,0x93,0x24,0x80,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xC6,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x1B,0xC2,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x73,0x83,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x73,0x9F,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x67,0xBF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x47,0xBF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x5F,0x87,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x83,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x07,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x2F,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x3E,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC1,0x80,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x83,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x06,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x08,0x20,0x00,0x06,0x0C,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x04,0x10,0x00,0x04,0x18,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x02,0x08,0x00,0x08,0x30,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x01,0x04,0x00,0x10,0x60,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x83,0x00,0x20,0xC0,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x41,0x80,0x41,0x80,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x20,0xC0,0x81,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x61,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x0C,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x1E,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x11,0x3F,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x63,0x87,0x11,0xBC,0x39,0xF3,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x56,0xC8,0xAA,0xC2,0x45,0x0D,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x54,0x50,0x64,0xC1,0x83,0x04,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x54,0x52,0x6D,0x49,0x93,0x9C,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x55,0x55,0xE1,0x55,0xAA,0x84,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x01,0x91,0x14,0x22,0x49,0xAA,0x84,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x02,0x99,0x35,0xE1,0x41,0xAA,0x85,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x02,0x98,0x32,0x6D,0x42,0xBA,0x87,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x02,0x19,0x30,0x64,0xC8,0x82,0x85,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x02,0x12,0x98,0xAA,0x50,0xC4,0x85,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x01,0xCC,0xEF,0x3B,0xF0,0x38,0x63,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,
0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
};
PROGMEM const unsigned char ICON_JOKER_POKER[]=
{
  128,96,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xFF,0x80,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xF8,0x20,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x10,0x00,0x00,0x00,0x20,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xD3,0xE0,0x00,0x00,0x18,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xF8,0x80,0x50,0x20,0x00,0x00,0x24,0x10,0x00,
0x00,0x00,0x00,0x00,0x01,0xFA,0x08,0x06,0x80,0x00,0x00,0x1A,0x14,0x00,0x10,0x00,
0x00,0x00,0x00,0x00,0x02,0x0C,0x14,0x00,0x80,0x20,0x30,0x21,0x10,0x00,0x10,0x00,
0x00,0x00,0x00,0x00,0x02,0x01,0x40,0x00,0xC0,0xC2,0x04,0x20,0x10,0x04,0x50,0x00,
0x00,0x00,0x00,0x00,0x02,0x01,0x41,0xA0,0xA1,0x00,0xC0,0x0F,0x00,0x17,0xA0,0x00,
0x00,0x00,0x00,0x00,0x02,0x02,0xA2,0x10,0x21,0x04,0x00,0x00,0x80,0xC3,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x20,0x00,0x00,0x5F,0x01,0xEE,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x48,0x40,0x00,0xA1,0xA9,0xF9,0xF1,0x42,0xFF,0x40,0x00,
0x00,0x00,0x00,0x00,0x00,0x58,0x44,0x23,0xAD,0x69,0xFD,0xF5,0x42,0xE7,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x51,0x54,0xF3,0xED,0x53,0xFD,0xEA,0x82,0xEB,0xE0,0x00,
0x00,0x00,0x00,0x00,0x00,0x15,0x75,0xFB,0xCE,0xE8,0x03,0xED,0x82,0xE5,0xC6,0x00,
0x00,0x00,0x00,0x00,0x00,0x14,0xF5,0x07,0xCC,0xF7,0xF3,0xE0,0x78,0xE9,0xC9,0x00,
0x00,0x00,0x00,0xF0,0x00,0x1C,0xF4,0x3D,0xCF,0xFB,0xFE,0xE0,0xAE,0xEA,0xD6,0x80,
0x00,0x00,0x02,0x0C,0x00,0x2C,0xF5,0xFD,0xCF,0x3C,0xFE,0xD2,0xEA,0xEA,0xD1,0x00,
0x00,0x00,0x0D,0xFA,0x0C,0xAC,0x75,0xFD,0xCE,0x5D,0x7E,0xD7,0x60,0xF0,0x61,0x00,
0x00,0x00,0x17,0xFD,0xF7,0x2C,0x75,0xFF,0xCE,0xAD,0x6E,0xD7,0x60,0x71,0x76,0x80,
0x00,0x00,0x2F,0x01,0xAD,0x4F,0x79,0xFB,0xAD,0x2A,0xDA,0x8F,0x41,0x8C,0xBC,0x00,
0x00,0x00,0x1C,0x03,0xD9,0x4F,0x7A,0xFA,0xA9,0x10,0x69,0x80,0x82,0xF0,0x42,0x00,
0x00,0x00,0x58,0x0A,0x18,0x8D,0xA0,0xF8,0x28,0xF4,0x03,0x03,0xE0,0x03,0x00,0x00,
0x00,0x00,0xB8,0x0B,0xDB,0x25,0xA1,0xF5,0x50,0x28,0x88,0x20,0x0F,0xE0,0x00,0x00,
0x00,0x00,0xB0,0x0C,0x3A,0x25,0x40,0x0A,0xA0,0xA8,0x10,0x07,0xC0,0x00,0x40,0x00,
0x00,0x00,0x70,0x09,0x04,0x91,0x20,0x01,0x00,0x24,0x03,0xC0,0x00,0x08,0x28,0x00,
0x00,0x01,0x70,0x00,0x79,0x82,0x10,0x02,0x45,0xCA,0x04,0x00,0x1F,0xFC,0x14,0x00,
0x00,0x01,0x60,0x09,0xFE,0x44,0x48,0x0C,0x30,0x0C,0xF8,0x0F,0xFF,0xFE,0x02,0x00,
0x00,0x01,0xE0,0x03,0xFF,0x08,0xE3,0xE0,0x80,0x1E,0x01,0xFF,0xFF,0xFE,0x01,0x00,
0x00,0x00,0xE0,0x03,0x83,0x81,0xF0,0x01,0xEF,0xFF,0x83,0xFF,0xFF,0xFF,0x01,0x80,
0x00,0x02,0xF0,0x02,0x00,0xC3,0xF8,0x03,0xFE,0x07,0x8F,0xFF,0x80,0x07,0x00,0x80,
0x00,0x02,0xD0,0x00,0x00,0x6F,0xF8,0x00,0xF8,0x03,0x00,0x83,0x40,0x00,0x00,0x40,
0x00,0x32,0xC0,0x00,0x00,0x6F,0xF8,0x20,0x70,0x05,0x40,0x80,0x00,0x00,0x00,0x00,
0x00,0x5E,0x00,0x00,0x1E,0x2F,0xFC,0x02,0x20,0x00,0x80,0x00,0x00,0x08,0x10,0x40,
0x00,0xFF,0x80,0x3C,0x27,0x3F,0xFE,0x08,0x00,0x20,0x88,0x20,0x00,0x08,0x00,0x00,
0x01,0x7F,0xC1,0xC1,0xA7,0xBF,0xFE,0x0C,0x04,0xF1,0x4A,0x40,0x81,0xD8,0x01,0xC0,
0x02,0xFF,0xE3,0x00,0x17,0xAF,0xFE,0x48,0x01,0xF0,0x0A,0x4C,0xC1,0x60,0x61,0xC0,
0x02,0xE0,0xE4,0x04,0x13,0xAF,0xFE,0x40,0x81,0xF7,0x39,0x9F,0xD8,0x80,0x61,0xC0,
0x01,0xD8,0x08,0x7F,0xD1,0x2F,0xFE,0x5B,0x39,0xFF,0x39,0x1F,0xDB,0xD8,0x61,0x80,
0x05,0xA0,0x11,0xEF,0x2A,0xF7,0xFC,0x70,0x3B,0xFB,0xB3,0x3F,0xDE,0x68,0x77,0x00,
0x07,0x40,0x23,0xB3,0x4A,0x97,0xFD,0xC0,0x3B,0xFB,0xB7,0xBF,0xDC,0xCE,0x7E,0x20,
0x03,0xC0,0x27,0x7F,0x0A,0xE7,0xFD,0xEB,0xBB,0xFF,0xBF,0xDF,0xDC,0x0E,0x67,0x20,
0x03,0x80,0x46,0xFF,0x16,0x75,0xC5,0xB3,0xBB,0xF7,0x3D,0xDF,0x98,0x0C,0x63,0xA0,
0x0A,0x80,0x4F,0xF7,0xB9,0x08,0x05,0x83,0xBB,0xF7,0x38,0xEB,0x18,0x00,0x63,0xA0,
0x0A,0x00,0x4F,0xCF,0xBA,0xF0,0x05,0x83,0xB9,0xF7,0x30,0xEF,0x18,0x18,0x61,0x80,
0x0B,0x03,0x4F,0xFF,0xCE,0x00,0x7D,0xBF,0xBD,0xEE,0x33,0x6C,0x18,0x18,0x61,0x98,
0x0B,0x05,0x0F,0xFF,0xF4,0x01,0xF1,0x8D,0xDC,0xDE,0x77,0x73,0x38,0x38,0x61,0xC4,
0x0B,0x08,0x97,0xFE,0x84,0x0F,0xF7,0xE7,0xDF,0x3C,0xF1,0x71,0xFC,0x38,0xF0,0xC4,
0x03,0x08,0x57,0xFF,0xE4,0x7F,0xF7,0xE7,0xC7,0xF0,0xFD,0x39,0xFF,0xFB,0xFC,0xF8,
0x07,0x08,0xAF,0xCF,0x95,0x7F,0xF0,0x07,0xF0,0x00,0x00,0x3F,0xFC,0x00,0x01,0x00,
0x05,0x88,0x9F,0xFF,0xF5,0x03,0xF8,0x0F,0xB8,0x03,0x00,0x4F,0x00,0x00,0x00,0x00,
0x03,0x88,0x5F,0xFB,0xF9,0xF3,0xE6,0x7F,0x7D,0x8F,0x37,0x80,0x00,0x00,0x04,0x00,
0x02,0xC4,0x4F,0xFD,0xF2,0x1F,0x8C,0x7E,0x7D,0xFF,0xDF,0xC0,0x7C,0x00,0x08,0x00,
0x01,0x64,0x27,0x7F,0x06,0x00,0x2B,0x6C,0xF3,0xE2,0x2E,0xA0,0x18,0x00,0x10,0x00,
0x00,0xB2,0x18,0xBF,0xFA,0x00,0x02,0x64,0xE1,0x60,0x26,0xF0,0x00,0x00,0x60,0x00,
0x00,0x49,0xF0,0xDF,0xFC,0x0F,0x80,0xC2,0xE1,0xE0,0x2C,0x68,0x00,0x00,0xC0,0x00,
0x00,0x34,0xE9,0x07,0xFC,0x0F,0x1F,0x81,0x80,0x60,0x30,0x14,0x00,0x0B,0x00,0x00,
0x00,0x0D,0xBA,0x00,0x00,0x1C,0x30,0x81,0x00,0x10,0x50,0x02,0x00,0x26,0x00,0x00,
0x00,0x05,0xB4,0x40,0x00,0x00,0x62,0x42,0x00,0x08,0x80,0x00,0x00,0xD8,0x00,0x00,
0x00,0x05,0xA8,0x00,0x00,0x03,0x85,0x24,0x88,0x45,0x12,0x90,0x03,0xE0,0x00,0x00,
0x00,0x02,0x00,0x00,0x00,0xC1,0x80,0x29,0x33,0x05,0x24,0x40,0x1F,0x80,0x00,0x00,
0x00,0x01,0x12,0x10,0x00,0x78,0xF8,0x11,0x6D,0xA2,0x6D,0x21,0xFE,0x00,0x00,0x00,
0x00,0x00,0x67,0x20,0x04,0xFC,0x2F,0x80,0x00,0x30,0x20,0x0F,0xF0,0x00,0x00,0x00,
0x00,0x00,0x4F,0xC0,0x03,0xFE,0x10,0x7E,0x00,0x00,0x00,0xFF,0x80,0x00,0x00,0x00,
0x00,0x00,0x9F,0x88,0x10,0xFD,0x0B,0x87,0xFF,0xFF,0xFF,0x38,0x00,0x00,0x00,0x00,
0x00,0x19,0x9F,0x0F,0xF0,0x1E,0x06,0xC0,0x01,0xC8,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x22,0x3C,0x6F,0xF2,0x00,0x06,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x4C,0x00,0xC7,0xF3,0xE0,0xFA,0xA0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x56,0x01,0x27,0xE2,0x1F,0x84,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x5C,0x0E,0x27,0xE4,0x00,0x03,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x29,0xF0,0x22,0xC4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x1E,0x00,0x22,0x8C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x12,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x11,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x10,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x10,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x10,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x21,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x5D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x3D,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x58,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x26,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
PROGMEM const unsigned char jackpot4[] ={
  128,96,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3E,0x7D,0xF7,0xCF,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3E,0x7D,0xF7,0xCF,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3E,0x7D,0xF7,0xCF,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3E,0x7D,0xF7,0xCF,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3E,0x7D,0xF3,0xCF,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3E,0x79,0xF3,0xCF,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x00,0x00,0x00,0x00,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6D,0xDB,0x36,0xED,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x6D,0xDB,0x36,0xED,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x6D,0xDB,0x36,0x6D,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x9F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x80,0x00,0x5F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x81,0xBC,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,0x9C,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF6,0xBE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC6,0x7C,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x84,0x60,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x8C,0x20,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9C,0x40,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xB0,0x78,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x3E,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFC,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEC,0x03,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xD8,0x5D,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCF,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF8,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7E,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xFF,0xFC,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0xFF,0xFD,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xFB,0xFF,0xFB,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFF,0xFF,0xF7,0xEF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7D,0xFF,0xEF,0xDF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBE,0xFF,0xDF,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDF,0x7F,0x9F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF,0xBF,0xBF,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF7,0xDF,0x7E,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFB,0xF9,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFD,0xF9,0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xF4,0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEC,0x77,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xDC,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBC,0x1F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x0F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x83,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xC3,0xBF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
};
PROGMEM const unsigned char jackpot3[] ={
  128,96,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0xE1,0x82,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0xE1,0x82,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0xE1,0x82,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0xE1,0x82,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0xE1,0x87,0x0C,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x93,0x24,0xC9,0x93,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x01,0x93,0x26,0xC9,0xB3,0x60,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x7F,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x7F,0x43,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x0D,0xE3,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x0D,0xC1,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x39,0xC3,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x7B,0x9F,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x73,0xFF,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x67,0x9F,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x4F,0xC3,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x07,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x17,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x37,0xBE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x38,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x0F,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x40,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x80,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC1,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x82,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x04,0x10,0x00,0x03,0x04,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x02,0x08,0x00,0x06,0x08,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x11,0x04,0x00,0x0C,0x10,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x20,0x82,0x00,0x18,0x30,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x41,0x80,0x30,0x60,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x20,0xC0,0x60,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x60,0xC1,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x0C,0x20,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x06,0x06,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x11,0x0F,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x88,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x04,0x3F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x3F,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x0F,0x1C,0x63,0x80,0x79,0xFF,0xDF,0x7B,0x7E,0x3C,0xF6,0xF8,0x00,0x00,
0x80,0x00,0x10,0x92,0x92,0x80,0x4A,0x08,0x20,0x46,0xC3,0x24,0x99,0x04,0x00,0x00,
0x80,0x00,0x20,0xA2,0x82,0x80,0x42,0x08,0x20,0x46,0xC1,0x04,0x09,0x04,0x00,0x00,
0x80,0x00,0x26,0xA2,0x82,0x80,0x87,0xBC,0xE7,0x46,0xCC,0x40,0x09,0xD8,0x00,0x00,
0x00,0x00,0x2B,0xA8,0x82,0x80,0x94,0xA2,0x87,0x56,0xD4,0x42,0x08,0x50,0x00,0x00,
0x00,0x00,0x20,0x29,0x82,0x80,0x94,0xA2,0xA0,0x52,0xD4,0x5A,0x28,0x50,0x00,0x00,
0x00,0x00,0x22,0xC9,0x82,0x80,0x90,0xA2,0xA7,0x52,0xD4,0x52,0x20,0x50,0x00,0x00,
0x80,0x00,0x26,0xC1,0x9E,0x70,0x02,0xA2,0xA7,0x58,0xCC,0x81,0x20,0x50,0x00,0x00,
0x80,0x00,0x20,0xCC,0x82,0x11,0x32,0xA2,0xA0,0xD8,0xC1,0x99,0x30,0x50,0x00,0x00,
0x80,0x00,0x11,0x50,0x86,0x11,0x4A,0xA2,0xB0,0x58,0xC2,0xA5,0xB2,0x50,0x00,0x00,
0x80,0x00,0x00,0x42,0x41,0x00,0x88,0x82,0x10,0x64,0x20,0xC4,0x88,0x60,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

PROGMEM const unsigned char ICON_ACES_AND_EIGHTS[] ={
  128,96,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0x1F,0xFF,0x80,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFC,0x06,0x0F,0xFE,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x07,0xFF,0xFF,0xFC,0x77,0x1F,0x0F,0xE0,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x3C,0x3F,0xE3,0xFC,0x76,0x3C,0x67,0xFE,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0xF1,0x1F,0x83,0xFC,0x5E,0x38,0xE7,0x87,0xC0,0x00,0x00,0x00,
0x00,0x00,0x00,0x0F,0x73,0x9F,0x99,0xFC,0x1E,0x10,0xE7,0x86,0xF8,0x00,0x00,0x00,
0x00,0x00,0x00,0x78,0x31,0xFF,0x8F,0xFC,0x7E,0x30,0xFF,0x0E,0x1F,0x00,0x00,0x00,
0x00,0x00,0x01,0xE3,0x90,0x3F,0xC4,0xFC,0x76,0x31,0xFF,0x1C,0x73,0xC0,0x00,0x00,
0x00,0x00,0x0F,0xC3,0xF8,0x07,0xCC,0xFC,0x76,0x31,0x86,0x18,0x61,0xF8,0x00,0x00,
0x00,0x00,0x3C,0x71,0xFE,0x03,0xCD,0xFC,0x64,0x71,0x9E,0x00,0xFC,0x7E,0x00,0x00,
0x00,0x00,0xF0,0x30,0x3C,0xE3,0xC1,0xFC,0x0C,0x39,0x9C,0x70,0xFE,0x0F,0x80,0x00,
0x00,0x03,0xF3,0x38,0xF4,0xE3,0xF7,0xFF,0xFF,0xF8,0x1C,0x71,0xFC,0x01,0xE0,0x00,
0x00,0x07,0xF3,0xF8,0x70,0x07,0xFF,0xFF,0xFF,0xFF,0x30,0xE3,0xF8,0x73,0xF0,0x00,
0x00,0x1F,0xF1,0xFC,0x7B,0x1F,0xFE,0x00,0x00,0x3F,0xF8,0xE3,0xF0,0xFF,0xFC,0x00,
0x00,0x7C,0xF0,0xFE,0x33,0xFF,0x00,0x00,0x00,0x00,0x7F,0xC7,0xF1,0xFC,0x1F,0x00,
0x00,0xF0,0x78,0x73,0x0F,0xF0,0x00,0x00,0x00,0x00,0x07,0xF3,0xE1,0xF8,0xCF,0x80,
0x03,0xF8,0x0C,0x39,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0xC7,0xF8,0xE7,0xE0,
0x07,0xFC,0x86,0x13,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x8F,0xD8,0xCF,0xC0,
0x03,0xFE,0x63,0x87,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xEF,0x88,0xDF,0x00,
0x01,0xFE,0x00,0xFE,0x00,0xFF,0xFF,0xCF,0xF0,0x3F,0x00,0x00,0x7F,0x3C,0xFE,0x00,
0x00,0xFF,0x1C,0x78,0x03,0xFF,0xFF,0xDD,0xFF,0xF0,0x78,0x00,0x0F,0x3C,0xFC,0x00,
0x00,0x3F,0x9E,0xE0,0x07,0x3F,0xFF,0xDD,0xFF,0xFE,0xFE,0x00,0x03,0x98,0xF8,0x00,
0x00,0x1F,0x8F,0x80,0x07,0x3F,0xFF,0xD0,0xFF,0xFD,0xD7,0xC0,0x00,0xC1,0xE0,0x00,
0x00,0x07,0xCE,0x00,0x36,0x5F,0xFF,0x9E,0xFF,0xF9,0xAF,0xF3,0xC0,0x7F,0xC0,0x00,
0x00,0x03,0xDC,0x07,0xF3,0xFF,0xFF,0xBF,0xFF,0xFB,0x8F,0xFC,0x7C,0x1F,0x80,0x00,
0x00,0x01,0xF0,0xFF,0xFB,0xBF,0xFF,0xB9,0xFF,0xF7,0xFF,0xFF,0x8C,0x06,0x00,0x00,
0x00,0x00,0xE1,0xFF,0xFB,0x1F,0xFF,0xA0,0xFF,0xEC,0x3F,0xFF,0xE0,0x00,0x00,0x00,
0x00,0x00,0x03,0x8F,0xE2,0x0F,0xFF,0x3A,0xFF,0xCC,0x3F,0xBF,0xFC,0x00,0x00,0x00,
0x00,0x00,0x01,0x8F,0xC3,0x3F,0xFF,0x7B,0xFF,0x9E,0x30,0x1F,0xFF,0x00,0x00,0x00,
0x00,0x00,0x0D,0x8F,0xE3,0xFF,0xFF,0x7F,0xFF,0xBF,0xF0,0x1F,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x7C,0xFF,0x83,0xFF,0xFF,0x7F,0xFF,0x7F,0xF0,0x0F,0xFF,0xF8,0x00,0x00,
0x00,0x03,0xF8,0xE7,0x0B,0xFF,0xFE,0x7F,0xFE,0x7F,0xFC,0x0F,0xFF,0xFE,0x00,0x00,
0x00,0x1F,0xC6,0xC1,0x9B,0xFF,0xFE,0xFF,0x7E,0xFF,0xF9,0x1F,0xFF,0xFF,0x80,0x00,
0x00,0x1E,0x30,0x9F,0xFB,0xFF,0xFE,0xFE,0xFD,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0,0x00,
0x00,0x1E,0x82,0x77,0xFB,0xFF,0xFE,0xFF,0x5B,0xFF,0xFF,0xFF,0xFF,0x3F,0xFC,0x00,
0x00,0x0E,0x47,0x7F,0xFB,0xFF,0xFC,0xFF,0x33,0xFF,0xFF,0xFF,0xF0,0x1F,0x8E,0x00,
0x00,0x0F,0x06,0x3F,0xFB,0xFF,0xFD,0xFE,0x17,0xFF,0xFF,0xFF,0xE0,0x1F,0x0E,0x00,
0x00,0x07,0x27,0x3F,0xFB,0xFF,0xFD,0xEC,0x0B,0xFF,0xFF,0xFF,0xF0,0x0F,0x5C,0x00,
0x00,0x07,0x80,0xBF,0xFB,0xFF,0xFD,0xF0,0x06,0xFF,0xFF,0x87,0xFC,0x0F,0xF8,0x00,
0x00,0x03,0x90,0xBF,0xFB,0xFF,0xFD,0x60,0x01,0x7F,0xFE,0x07,0xF9,0x18,0x70,0x00,
0x00,0x03,0xC8,0x9F,0xFB,0xFF,0xF9,0x80,0x00,0xDF,0xFC,0x03,0xFF,0xF8,0x70,0x00,
0x00,0x01,0xE9,0x9F,0xFB,0xFF,0xFB,0x00,0x00,0x17,0xFE,0x03,0xFF,0xFC,0x60,0x00,
0x00,0x01,0xE4,0xCF,0xFB,0xFF,0xEC,0x03,0xF0,0x08,0xFF,0x83,0xFF,0xFF,0xC0,0x00,
0x00,0x00,0xF0,0xAF,0xFB,0xFF,0xD0,0x0C,0x1C,0x02,0xFF,0x67,0xFF,0xFF,0x80,0x00,
0x00,0x00,0x72,0xCF,0xFB,0xFF,0x60,0x30,0x07,0x01,0xBF,0xFF,0xFF,0xFF,0x80,0x00,
0x00,0x00,0x79,0x07,0xFB,0xFE,0x80,0x43,0xF1,0xC0,0x5F,0xFF,0xFF,0xFF,0x00,0x00,
0x00,0x00,0x39,0x27,0xFB,0xFF,0x01,0x8F,0xFC,0x60,0x3F,0xFF,0xFF,0xFE,0x00,0x00,
0x00,0x00,0x3C,0x97,0xFB,0xF4,0x12,0x3F,0xFF,0x30,0x0F,0xFF,0xFF,0xFC,0x00,0x00,
0x00,0x00,0x1E,0x93,0xFB,0xE8,0x04,0x7F,0xFF,0xD8,0x05,0xFF,0xFF,0xFC,0x00,0x00,
0x00,0x00,0x1E,0x03,0xFB,0xD0,0x08,0x47,0xFC,0x4C,0x02,0xC1,0xFF,0xF8,0x00,0x00,
0x00,0x00,0x0F,0x43,0xFB,0xA0,0x10,0xC4,0xE0,0x64,0x01,0x00,0xFF,0xF0,0x00,0x00,
0x00,0x00,0x0F,0x23,0xFB,0x40,0x10,0xC0,0xE0,0x62,0x00,0x80,0x7F,0xE0,0x00,0x00,
0x00,0x00,0x07,0xB1,0xFB,0x80,0x30,0x63,0xF3,0xC3,0x00,0x40,0x7F,0xE0,0x00,0x00,
0x00,0x00,0x03,0x91,0xFA,0x80,0x30,0x3F,0x1F,0x83,0x00,0x08,0xFF,0xC0,0x00,0x00,
0x00,0x00,0x03,0xD8,0xF9,0x00,0x30,0x1E,0x1F,0x01,0x00,0x2F,0xFF,0x80,0x00,0x00,
0x00,0x00,0x01,0xE8,0xF9,0x00,0x30,0x07,0x59,0x01,0x00,0x2F,0xFF,0x00,0x00,0x00,
0x00,0x00,0x01,0xEC,0xFA,0x00,0x32,0x1F,0xFB,0x01,0x00,0x0F,0xFF,0x00,0x00,0x00,
0x00,0x00,0x00,0xF4,0x7A,0x00,0x12,0x09,0xF0,0x01,0x00,0x17,0xFE,0x00,0x00,0x00,
0x00,0x00,0x00,0xF2,0x7E,0x00,0x1B,0x08,0x62,0x03,0x00,0x17,0xFC,0x00,0x00,0x00,
0x00,0x00,0x00,0x79,0x7E,0x00,0x09,0x0F,0x06,0x02,0x00,0x17,0xF8,0x00,0x00,0x00,
0x00,0x00,0x00,0x79,0x3E,0x00,0x0D,0x87,0xFC,0x06,0x00,0x17,0xF8,0x00,0x00,0x00,
0x00,0x00,0x00,0x3D,0xBE,0x00,0x04,0x83,0xF8,0x14,0x00,0x1F,0xF0,0x00,0x00,0x00,
0x00,0x00,0x00,0x1C,0xBC,0x00,0x06,0xC0,0x00,0x60,0x00,0x0F,0xE0,0x00,0x00,0x00,
0x00,0x00,0x00,0x1E,0x11,0x00,0x03,0x44,0x01,0x80,0x00,0x2F,0xC0,0x00,0x00,0x00,
0x00,0x00,0x00,0x0F,0x11,0x80,0x01,0xA2,0x02,0x00,0x00,0x1F,0xC0,0x00,0x00,0x00,
0x00,0x00,0x00,0x0F,0x1D,0x80,0x00,0xB1,0x04,0x00,0x00,0x7F,0x80,0x00,0x00,0x00,
0x00,0x00,0x00,0x07,0x8D,0xC0,0x00,0x58,0x08,0x00,0x01,0xBF,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x07,0x8C,0x30,0x00,0x29,0x30,0x00,0x02,0x0E,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0xCE,0xAC,0x00,0x17,0x2C,0x00,0x0B,0x06,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x03,0xC6,0x7F,0xE0,0x79,0x23,0xE3,0xCF,0x8C,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x01,0xE7,0xF8,0x60,0x01,0x00,0x1F,0xFF,0xF8,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xF0,0x07,0x80,0x01,0x10,0x0F,0xFD,0x70,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xF1,0xFC,0x00,0x01,0x10,0x03,0xFC,0x70,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x7F,0xE0,0x00,0x02,0x10,0x00,0x78,0xE0,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x7F,0x00,0x00,0x02,0x08,0x00,0x1F,0xC0,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x10,0x00,0x00,0x02,0x08,0x00,0x07,0x80,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x08,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};
PROGMEM const unsigned char ICON_DOUBLE_DOUBLE_BONUS[] ={
  128,96,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x30,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC6,0x00,0x00,
0x07,0xF0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0xB7,0x80,0x00,
0x3F,0xF8,0x00,0x00,0x00,0x1C,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFF,0xB0,0x00,
0x7F,0xF8,0x00,0xFF,0xF1,0xFF,0x7F,0xFF,0xFF,0xFF,0xDF,0xFF,0x1F,0xEF,0x78,0x00,
0x5F,0xF8,0x01,0x80,0x3B,0x01,0x80,0x00,0x00,0x80,0x90,0x03,0x15,0x7E,0xDC,0x00,
0x7F,0xFC,0x01,0x7F,0xDC,0xFE,0xFE,0x73,0xFE,0x7E,0xAF,0xFD,0x1D,0x5D,0x3E,0x00,
0xEF,0xFC,0x01,0x39,0xEB,0x8E,0xB9,0x69,0xCE,0xB9,0xB7,0x0D,0x17,0xBB,0xFE,0x00,
0xBF,0xFC,0x01,0x76,0xE7,0x6E,0xBB,0x5B,0x8E,0xBB,0x37,0x29,0x1F,0xF7,0xFF,0x00,
0xFF,0x7E,0x01,0x76,0xEF,0x6E,0x76,0xDB,0xBD,0xF6,0xEF,0x52,0x1B,0x6F,0xE7,0x80,
0xFE,0x7E,0x03,0x6D,0xEE,0xAE,0x76,0xBB,0xF9,0x75,0xEF,0xDE,0x1B,0xFF,0xE7,0x80,
0xBF,0x7E,0x02,0xED,0xCE,0xDC,0xEE,0xB7,0x1D,0x76,0x1C,0xA6,0x1F,0xFF,0xE7,0xC0,
0xFF,0xFF,0x06,0xEB,0x9D,0xDC,0xED,0xB7,0xDC,0xED,0xDD,0x12,0x1E,0xFF,0xFF,0xE0,
0xFF,0xFF,0x0D,0xC7,0x2E,0x3A,0xE3,0x4E,0x38,0xE3,0x1C,0x64,0x15,0xFF,0xFF,0xC0,
0x6F,0xFF,0x0B,0xFC,0xEF,0xE6,0xFE,0xDF,0xF3,0xFE,0x7F,0xC8,0x1A,0xFF,0xFF,0x80,
0xBF,0xFD,0x98,0x03,0xB0,0x1B,0x01,0xC0,0x08,0x01,0x00,0x10,0x1F,0xF9,0xFF,0x00,
0xFF,0xFF,0x9F,0xFE,0x1F,0xF3,0xFF,0x7F,0xFF,0xFF,0xFF,0xE0,0x1B,0x71,0xFE,0x00,
0xD7,0xFE,0x00,0x00,0x07,0x80,0x78,0x00,0x00,0x00,0x00,0x00,0x0D,0xB5,0xFC,0x00,
0xEF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0xFF,0xF8,0x00,
0xF7,0xBC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x17,0xFF,0xF0,0x00,
0x39,0xFC,0x00,0xFF,0xE0,0xFF,0x7F,0xFF,0xFF,0xFF,0xDF,0xFF,0x1E,0xEF,0x40,0x00,
0xDB,0xB8,0x01,0x80,0x7B,0x83,0x81,0x84,0x01,0xC0,0xD0,0x03,0x1F,0xEE,0x80,0x00,
0xF5,0x68,0x01,0x00,0x1E,0x18,0x80,0x00,0x00,0x80,0xB0,0x01,0x00,0x07,0x00,0x00,
0x3B,0xF8,0x01,0x29,0xC8,0xCA,0x2C,0x63,0x4E,0x3C,0xA5,0x11,0x00,0x02,0x00,0x00,
0x0F,0xD0,0x03,0x20,0xAB,0x22,0xA9,0x49,0xA2,0xA9,0xB5,0x09,0x00,0x00,0x00,0x00,
0x00,0xB0,0x01,0x16,0xE5,0x66,0x33,0x58,0x8C,0xB3,0x26,0x01,0x00,0x00,0x00,0x00,
0x00,0x30,0x03,0x56,0xAA,0xEE,0x56,0x1B,0xD9,0x17,0xEB,0x56,0x00,0x00,0x00,0x00,
0x00,0x00,0x02,0x2D,0x4E,0xE0,0x66,0xB3,0x19,0x57,0x62,0x16,0x00,0x00,0x00,0x00,
0x00,0x00,0x06,0xAC,0xC8,0xD4,0x2C,0xB5,0x55,0x66,0x84,0x82,0x00,0x00,0x00,0x00,
0x00,0x00,0x0C,0xC3,0xAD,0x88,0xAD,0x26,0x94,0xA9,0x5D,0x16,0x00,0x00,0x00,0x00,
0x00,0x00,0x09,0x06,0x68,0x32,0xA2,0x4E,0x18,0xE2,0x10,0x6C,0x00,0x00,0x00,0x00,
0x00,0x00,0xDA,0x10,0xE3,0xC6,0x7C,0xDC,0xC2,0x7C,0x63,0xD9,0xDC,0x00,0x00,0x00,
0x00,0x07,0xD8,0x03,0xB8,0x1F,0x03,0xC0,0x18,0x01,0x00,0x13,0x9F,0x80,0x00,0x00,
0x05,0x01,0xDF,0xFE,0x1F,0xF3,0xFF,0xFF,0xFF,0xFF,0xFF,0xE4,0x1E,0x02,0x80,0x00,
0x12,0x80,0x00,0x00,0xC7,0x80,0x08,0x00,0x00,0x00,0x00,0x0C,0x20,0x05,0x20,0x00,
0x24,0x03,0x80,0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x07,0xC7,0x00,0x90,0x00,
0x43,0xE7,0xCF,0xCF,0xC0,0x00,0x00,0x00,0x00,0x00,0x0F,0xCF,0xCF,0x8F,0x08,0x00,
0x2B,0xEB,0xE1,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x9F,0x0F,0xDF,0x44,0x00,
0x41,0xF0,0x45,0xDF,0xFE,0x3F,0xBF,0xFF,0xFF,0xF7,0xF8,0x46,0x48,0x3E,0x08,0x00,
0x63,0xF0,0x08,0xD0,0x03,0x40,0x60,0x00,0x00,0x08,0x05,0xD4,0x40,0x3F,0x1A,0x00,
0x01,0x8B,0x80,0x14,0x79,0x9F,0x2F,0x96,0xF9,0xC3,0xD5,0xC0,0x07,0xC6,0x00,0x00,
0xF2,0x7B,0xC3,0x50,0x06,0x29,0x85,0x4C,0x90,0xC6,0x34,0x9B,0x0F,0x79,0x3C,0x00,
0xF1,0xF3,0x07,0xDA,0x8E,0x50,0xC0,0xC1,0x56,0x88,0x90,0x87,0x8B,0x3E,0x3C,0x00,
0x05,0xE3,0xC1,0xCA,0x8A,0x26,0xA5,0x49,0x56,0xA8,0x02,0x8E,0x0F,0x1E,0x80,0x00,
0x7A,0xB7,0xC7,0xAA,0x98,0x8A,0xE4,0xA1,0x56,0x8B,0xE6,0xCF,0x87,0x9D,0x38,0x00,
0x01,0xC0,0x03,0xEB,0x70,0xAA,0x24,0xC1,0x56,0x87,0x2A,0x8F,0x00,0x0D,0x00,0x00,
0x00,0x07,0x81,0x6A,0x8A,0xAA,0x64,0x21,0x56,0x91,0xDA,0x19,0x07,0xC0,0x00,0x00,
0x00,0x00,0x01,0x0B,0xA6,0x26,0xA5,0x41,0x56,0x80,0x0A,0x02,0x00,0x00,0x00,0x00,
0x00,0x00,0x07,0xDA,0xA2,0x54,0xC5,0x29,0x76,0x89,0x9A,0x0F,0x40,0x03,0x00,0x00,
0x00,0x00,0x00,0x12,0x02,0x31,0xC4,0xA9,0x60,0xA4,0x1A,0x00,0x00,0x06,0x80,0x00,
0x00,0x00,0x00,0x17,0xFC,0x9F,0x2E,0x1D,0x3F,0x27,0xF6,0x00,0x00,0x1D,0xC0,0x00,
0xE0,0x00,0x00,0x10,0x01,0xC0,0x60,0xC1,0x80,0x70,0x0C,0x00,0x00,0x3F,0xB0,0x00,
0xFF,0x00,0x00,0x1F,0xFE,0x31,0xFF,0xFE,0x7F,0x9F,0xF8,0x00,0x00,0xF9,0xC0,0x00,
0xFF,0xF8,0x00,0x00,0x00,0x0E,0x00,0x00,0x00,0x0C,0xC0,0x00,0x01,0xCE,0x58,0x00,
0xFF,0xFE,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0xFF,0xF8,0x00,
0xFF,0xFA,0x00,0x0F,0xFC,0x3F,0x3F,0xFF,0xFF,0xFF,0xF0,0x00,0x07,0xFE,0x78,0x00,
0xFF,0xFE,0x00,0x10,0x06,0xC0,0xC0,0x00,0x00,0x40,0x08,0x00,0x2D,0x9F,0xFC,0x00,
0xDF,0xFC,0x00,0x14,0x01,0x8E,0x01,0x04,0x00,0x10,0x04,0x00,0x7D,0xF7,0xDA,0x00,
0xD9,0xFC,0x00,0x16,0xDC,0x23,0x97,0x38,0xD3,0x96,0x52,0x00,0x3D,0x7C,0xFE,0x00,
0xFB,0xBC,0x80,0x12,0x82,0x71,0xCA,0x30,0x40,0x8E,0x3A,0x00,0x15,0x7F,0x9E,0x00,
0xFF,0xBF,0xC0,0x0A,0xAA,0xEC,0x4A,0x4F,0x42,0x4A,0xAA,0x00,0x17,0xFF,0xEE,0x00,
0xFF,0xFF,0x40,0x0A,0x8A,0xA8,0xCA,0x89,0x46,0x2A,0x72,0x00,0x0E,0xE7,0xF8,0x00,
0xFF,0xFB,0xE0,0x0B,0x3C,0x6A,0xCF,0x25,0x5E,0xED,0x94,0x00,0x0F,0xF7,0xF7,0x00,
0xFF,0xFA,0xB0,0x0A,0x40,0xAA,0x8A,0x74,0x52,0xAE,0xAC,0x00,0x01,0xFF,0xFD,0x80,
0x7F,0xFE,0xF8,0x0A,0x86,0xAC,0xCA,0x62,0x62,0x4E,0x44,0x00,0x01,0xFF,0xEF,0x00,
0xE7,0xFE,0xF0,0x1B,0xBE,0xA5,0x4E,0x0B,0x40,0xCA,0x72,0x00,0x03,0xFF,0xE7,0x00,
0xFF,0x36,0xC0,0x12,0x13,0x70,0x8E,0x24,0x11,0x8A,0x39,0x00,0x03,0x9F,0xFF,0x00,
0x2F,0xE1,0xC0,0x17,0xD1,0x3F,0x1F,0x7E,0xFF,0x9F,0x3D,0x00,0x07,0xDF,0xFE,0x00,
0xFC,0x7C,0x80,0x10,0x10,0x80,0x40,0x00,0x00,0x00,0x01,0x00,0x06,0xFF,0xFE,0x00,
0x1F,0xF3,0x00,0x1F,0xF0,0x61,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x01,0xBF,0xBC,0x00,
0x7D,0xCE,0x00,0x0F,0xE0,0x1E,0x00,0x00,0x00,0x80,0x00,0x20,0x00,0x7F,0x9C,0x00,
0x2F,0xBC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0xFC,0x00,
0x3E,0xD8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xF8,0x00,
0x1B,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0x00,
0x02,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x00,
0x01,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
void executeJackpot(){
  switch((millis()%1000)/250){
    case 0:TV.bitmap(0,0,jackpot1);break;
    case 1:TV.bitmap(0,0,jackpot2);break;
    case 2:TV.bitmap(0,0,jackpot3);break;
    case 3:TV.bitmap(0,0,jackpot4);break;
  }
}
int compareCards(const void *card1, const void *card2){
    return (*(Card *)card1).rank - (*(Card *)card2).rank;
}
int evaluateHand(Card hand[]){
            qsort(hand,5,sizeof(Card),compareCards);
            int straight,flush,three,four,full,jacksOrBetter,pairs;
            int k,dbFour;  
            Card jokerHand[5];
            int jokerWin=1;
    bool bthree;
    bool btwo;
    bthree=btwo=false;
            dbFour=-1;
            jacksOrBetter=straight = flush = three = four = full = pairs = 0;
            k = 0;
            int ofAKind=hand[0].rank;
            int extraCard=-1;
            int rankCount[14];
            bool five=true;
for(int i=0;i<5;i++)five=five&&hand[i].rank+hand[i].suit==0;
if(five)return -1;five=true;
            for(int i=1;i<5;i++)five=five&&(hand[i].rank==ofAKind);
            if(five)return 14;
          for(int j=0;j<5;j++)rankCount[hand[j].rank]++;
          for(int j=0;j<13;j++)if(rankCount[j]==1)extraCard=j;
for(int i=0;i<13;i++)switch(rankCount[i]){
  case 2:btwo=true;break;
  case 3:bthree=true;break;
}
         /*checks for flush*/
            while (k<4&&hand[k].suit==hand[k+1].suit)
                k++;
            if (k==4){
                flush = 1;
            }
            if(flush&&hand[0].rank==0&&hand[1].rank==9&&hand[2].rank==10&&hand[3].rank==11&&hand[4].rank==12)
            return 10;//royal flush
            /* checks for straight*/
            k=0;
            while (k<4&&hand[k].rank==hand[k+1].rank-1)
                k++;
            if (k==4){
                straight = 1;
            }
            /* checks for fours */
            for (int i=0;i<2;i++){
                k = i;
                while (k<i+3&&hand[k].rank==hand[k+1].rank){
                    k++;ofAKind=hand[k].rank;
                    if(selGame==2||selGame==4)
                    dbFour=hand[k].rank;
                }
                if (k==i+3){
                    four = 1;
                }else dbFour=-1;
            }

            /*checks for threes and fullhouse*/
            
            if (!four){
                for (int i=0;i<3;i++){
                    k = i;
                    while (k<i+2&&hand[k].rank==hand[k+1].rank){
                        k++;
                    }
                    if (k==i+2){
                        three = 1;
                        if (i==0){
                            if (hand[3].rank==hand[4].rank){
                                full=1;
                        }
                        else if(i==1){
                            if (hand[0].rank==hand[4].rank){
                                full=1;}            }
                        else{
                            if (hand[0].rank==hand[1].rank){
                         
                                full=1;
                            }
                        }
                    }
                }
            }
            }
            if (straight&&flush){
                return 9;
            }
            else if(four){
              if(selGame==4)
                switch(dbFour){
                  case 0:
                  case 7:return 13;
                  case 6:return 12;
                  default:return 11;
                  case -1:;
                }
          if(selGame==5){
         switch(dbFour){
          case 0:if(hand[4].rank<4)return 8;return 11;
          case 1:
          case 2:
          case 3:if(extraCard==0||extraCard<4)return 11;return 12;
          case 4:
          case 5:
          case 6:
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:return 13;
         }
         }
              if(selGame==2)
              switch(dbFour){
                case 0:return 11;
                case 1:
                case 2:
                case 3:return 12;
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                case 9:
                case 10:
                case 11:
                case 12:return 13;
              }
              if(hand[4].rank==13)return 14;
                return 8;
            }
            else if(full&&btwo&&bthree)
                return 7;
            else if(flush)
                return 6;
            else if(straight)
                return 5;
            else if(three){
            if(hand[4].rank==13)return 7;
                return 4;
            }
            /* checks for pairs*/
            for (k=0;k<4;k++)
                if (hand[k].rank==hand[k+1].rank){
                  if(hand[k].rank==0||hand[k].rank>9)jacksOrBetter++;
                    pairs++;
                  }
            if (pairs==2)
            
                return 3;
            else if(pairs){
              if(hand[4].rank==13)return 4; 
              if(jacksOrBetter==1&&selGame!=3)
                return 2;
               else return 1;
            }
            else{
             if(selGame==3&&hand[4].rank==13){
                for(int i=0;i<4;i++){  
                for(int j=0;j<13;j++){
                  for(int l=0;l<4;l++){
                    jokerHand[l].suit=hand[l].suit;
                    jokerHand[l].rank=hand[l].rank;
                  }
                  jokerHand[4].suit=i;
                  jokerHand[4].rank=j;
                  jokerWin=max(jokerWin,evaluateHand(jokerHand));
                }
                }
             return jokerWin;
             }
             return 0;
            }
}
byte cardDeck[10];
byte suitFromCard(byte card){
  return card/0x10;
}
byte faceFromCard(byte card){
  return card&0x0f;
}
word getPayout(int handType,int selGame){
 if(selGame==1)
 switch(handType){
  case 2:return 1;
  case 3:return 2; 
  case 4:return 3;
  case 5:return 4;
  case 6:return 6;
  case 7:return 9;
  case 8:return 25;
  case 9:return 50;
  case 10:if(saved.bet==5)return 800; else return 250;
}if(selGame==3)
 switch(handType){
  case 3:return 1; 
  case 4:return 2;
  case 5:return 5;
  case 6:return 6;
  case 7:return 10;
  case 8:return 20;
  case 9:return 50;
  case 10:return 1000;
  case 14:return 100;
  case 15:return 50;
}
 if(selGame==2)
 switch(handType){
  case 2:return 1;
  case 3:return 1;
  case 4:return 3;
  case 5:return 5;
  case 6:return 7;
  case 7:return 10;
  case 9:return 50;
  case 10:if(saved.bet==5)return 800; else return 250;
  case 11:return 160;
  case 12:return 80;
  case 13:return 50;
}
 if(selGame==5)
 switch(handType){
  case 2:return 1;
  case 3:return 1;
  case 4:return 3;
  case 5:return 4;
  case 6:return 6;
  case 7:return 10;
  case 9:return 50;
  case 10:if(saved.bet==5)return 800; else return 250;
  case 11:return 160;
  case 12:return 80;
  case 13:return 50;
  case 8:return 400;
}
 if(selGame==4)
 switch(handType){
  case 2:return 1;
  case 3:return 2;
  case 4:return 3;
  case 5:return 4;
  case 6:return 5;
  case 7:return 8;
  case 9:return 50;
  case 10:if(saved.bet==5)return 800; else return 250;
  case 11:return 25;
  case 12:return 50;
  case 13:return 80;
}
return 0;
}
byte makeCard(byte face,byte suit){
  return face+(suit*0x10);
}
bool isCardUsed(byte card){
  for(int i=0;i<10;i++)if(card==cardDeck[i])return true;
  return false;
}
bool holdButtons[5];
bool betOne,betMax,cashOut,dealDraw;
void repaint(){
 if(!gameStarted)return;
  TV.clear_screen();
  TV.select_font(font6x8);
 int winner=0;
  if(selGame>0){
 winner=evaluateHand(playerHand);
 if(winner>-1)
    for(int i=0;i<5;i++){
     TV.set_cursor(20*i+4,0);
     if(playerHand[i].rank<14){
     TV.print(faces[playerHand[i].rank]);
    if(playerHand[i].rank<13){
      TV.select_font(suitFont);
  TV.print(suits[playerHand[i].suit]);
    }else TV.print("oker");
    TV.select_font(font6x8);
    TV.set_cursor(20*i+4,25);
  if(playerHand[i].hold)TV.print("Hol");else TV.print("   ");}}
 /* else{
  TV.select_font(suitFont);
    TV.print("e");
    TV.select_font(font6x8);
    TV.print("Ho ");
  }*/
  for(int i=0;i<2;i++)
  TV.println();
if(saved.credits<1){
  TV.println("Game Over");
  delay(5000);
  saved.credits=default_credits;
  if(default_credits<1){
    saved.credits=0;
    paid=false;
  }
gameStarted=false;
  return;
}}
TV.print("$");
TV.print(saved.credits);
TV.print(" Bet: ");
TV.print(saved.bet,DEC);
TV.println();
if(selGame>0&&busy)
switch(winner){
  case 0:TV.print("Nothing");break;
  case 1:TV.print("Pair(not good enough)");break;
  case 2:TV.print("Jacks or better $");TV.print(saved.bet,DEC);break;
  case 3:TV.print("Two Pairs $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
  case 4:TV.print("3 of a kind $");
  TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
  case 5:TV.print("Straight $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
  case 7:TV.print("Full House $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
 case 13:
 case 12:
 case 11:
  case 8:TV.print("4 of a kind $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
  case 6:TV.print("Flush $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
  case 9:TV.print("Straight Flush $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
case 14:TV.print("5 of a kind $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
case 10:TV.print("Royal Flush $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
case 15:TV.print("Wild Royal Flush $");TV.print(saved.bet*getPayout(winner,selGame),DEC);break;
}
TV.println();
if(mode%2==1&&winner>1&&!busy)TV.println("You won!");
if(mode%2==1&&winner<2&&!busy)TV.println("You lose!");
}
void newHand(){
  digitalWrite(A1,LOW);
  digitalWrite(A2,LOW);
  digitalWrite(A3,LOW);
  digitalWrite(A4,LOW);
  digitalWrite(A5,LOW);
  for(int i=1;i<7;i++)panelLights[i]=false;
  panelLights[0]=true;
  for(int i=0;i<10;i++)cardDeck[i]=255;
int cardCount=0;
while(cardCount<10){
  byte suit=random(4);
  byte face=random(13);
  if(selGame==3){face=random(14);if(face==13)suit=4;}
  byte c=makeCard(face,suit);
  if(!isCardUsed(c)){cardDeck[cardCount]=c;
    if(cardCount<5){playerHand[cardCount].suit=suit;playerHand[cardCount].rank=face;
  playerHand[cardCount].hold=false;}
  cardCount++;
  }
}
busy=true;
mode=1;
repaint();
}void draw(){
  for(int i=0;i<5;i++){
if(!playerHand[i].hold){playerHand[i].rank=faceFromCard(cardDeck[i+5]);
playerHand[i].suit=suitFromCard(cardDeck[i+5]);}playerHand[i].hold=false;}
mode=0;
busy=false;
repaint();
panelLights[1]=(saved.bet>=saved.credits);
}
void setup() {
  // put your setup code here, to run once:
  saved.bet=1;
  saved.credits=default_credits;
  if(default_credits>0){
  EEPROM.get(21,saved);
  if(saved.tag!=saved_game_tag){
  saved.tag=saved_game_tag;
  EEPROM.put(21,saved);
  }
  }else{
    delay(750);
   saved.credits=0;
    pinMode(1,INPUT_PULLUP);
  }
  pinMode(8,INPUT_PULLUP);//bet one button
  pinMode(10,INPUT_PULLUP);//deal/draw button
  pinMode(11,INPUT_PULLUP);//bet max button
  pinMode(12,INPUT_PULLUP);//cash out button
  pinMode(13,OUTPUT);//bet button and cash out lights  
  int randomId=0;
  for(int i=A0;i<=A5;i++)
randomId+=analogRead(i)-randomId;
randomSeed(randomId);
  pinMode(A1,OUTPUT);
  digitalWrite(A1,LOW);
  pinMode(A2,OUTPUT);
  digitalWrite(A2,LOW);
    pinMode(A3,OUTPUT);
  digitalWrite(A3,LOW);
    pinMode(A4,OUTPUT);
  digitalWrite(A4,LOW);
  pinMode(A5,OUTPUT);
  digitalWrite(A5,LOW);
  //A1-A5 hold/cancel lights
for(int i=2;i<7;i++){//hold buttons are pins 2-6
 pinMode(i,INPUT_PULLUP);
}
TV.begin(_NTSC); 
TV.select_font(font6x8);
//randomSeed(analogRead(A0));
pinMode(A0,OUTPUT);//deal/draw light
for(int i=0;i<5;i++){playerHand[i].hold=false;}
switch(selGame){
    case 1:TV.bitmap(0,0,ICON_JACKS_OR_BETTER);break;
    case 2:TV.bitmap(0,0,ICON_DOUBLE_BONUS);break;
    case 3:TV.bitmap(0,0,ICON_JOKER_POKER);break;
  case 4:TV.bitmap(0,0,ICON_ACES_AND_EIGHTS);break;
  case 5:TV.bitmap(0,0,ICON_DOUBLE_DOUBLE_BONUS);break;
  }
saved.credits=5;
}
void toggleLights(){
  if(millis()%2000>1000){
if(panelLights[0])digitalWrite(A0,blinkState);
if(panelLights[1])digitalWrite(13,blinkState);
if(panelLights[2])digitalWrite(A1,blinkState);
if(panelLights[3])digitalWrite(A2,blinkState);
if(panelLights[4])digitalWrite(A3,blinkState);
if(panelLights[5])digitalWrite(A4,blinkState);
if(panelLights[6])digitalWrite(A5,blinkState);
blinkState ^= HIGH;
  }
}
PROGMEM const unsigned char INSERT_COINS[]=
{//Had to use bitmap instead of text, otherwise it crash
  94,23,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x04,0x00,0x00,0x00,0x00,0x00,0x20,0x00,0x00,0x08,0x00,0x00,
0x04,0x00,0x00,0x00,0x02,0x00,0x60,0x00,0x00,0x00,0x00,0x00,
0x04,0x00,0x00,0x00,0x02,0x00,0xE0,0x00,0x00,0x00,0x00,0x00,
0x04,0xF8,0x78,0x7C,0x7F,0x81,0xA0,0x0F,0x87,0x88,0xF8,0x00,
0x04,0xCC,0x84,0xC6,0x62,0x00,0x20,0x18,0xC8,0xC8,0xCC,0x00,
0x04,0xC4,0x80,0xC2,0x62,0x00,0x20,0x18,0x18,0x48,0xC4,0x00,
0x04,0x84,0xC0,0x82,0x42,0x00,0x20,0x10,0x10,0x48,0x84,0x00,
0x04,0x84,0x78,0xFE,0x42,0x00,0x20,0x10,0x10,0x48,0x84,0x00,
0x04,0x84,0x0C,0x80,0x42,0x00,0x20,0x10,0x10,0x48,0x84,0x00,
0x04,0x84,0x04,0x80,0x42,0x00,0x20,0x18,0x18,0x48,0x84,0x00,
0x04,0x84,0x84,0xC6,0x43,0x00,0x20,0x18,0xC8,0xC8,0x84,0x00,
0x04,0x84,0x78,0x7C,0x43,0x80,0x20,0x0F,0x87,0x88,0x84,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};
void loop() {
// put your main code here, to run repeatedly:
  if(default_credits<1&&!paid){
  TV.bitmap(0,48,INSERT_COINS);
    // while the coin pin is low (no coin detected), do nothing
  while (! digitalRead(1)) {
    delay(1);
    toggleLights();
  }
  // while the pin is high, we'll track the length with a counter
  uint8_t counter = 0;
  while (digitalRead(1)) {
    delay(1);
    toggleLights();
    counter++;
  }
  if ((counter > 60) || (counter < 20))
      return;
      
  saved.credits=abs(default_credits);
  paid=true;
}
  toggleLights();
  bool holds=false;
  for(int i=2;i<7;i++)holds=(holds||digitalRead(i)==LOW);
  if(digitalRead(10)==LOW&&holds&&gameStarted&&!busy){
    gameStarted=holds=false;
    return;
  }
  if(Jackpot){
    executeJackpot();
  }
  for(int j=0;j<5;j++)
if(!gameStarted&&(digitalRead(2+j)==LOW)){
  selGame++;
  for(int i=0;i<5;i++)  holdButtons[i]=false;
  if(selGame>5)selGame=1;
  switch(selGame){
    case 1:TV.bitmap(0,0,ICON_JACKS_OR_BETTER);break;
    case 2:TV.bitmap(0,0,ICON_DOUBLE_BONUS);break;
    case 3:TV.bitmap(0,0,ICON_JOKER_POKER);break;
  case 4:TV.bitmap(0,0,ICON_ACES_AND_EIGHTS);break;
  case 5:TV.bitmap(0,0,ICON_DOUBLE_DOUBLE_BONUS);break;
  }
  delay(50);
}if(!gameStarted&&digitalRead(10)==LOW){
 dealDraw=false;
 gameStarted=true;
 repaint();
  delay(50);
}
if(mode%2==1&&selGame>0&&busy){
for(int i=0;i<5;i++){
    if(digitalRead(2+i) == LOW){
    holdButtons[i] = true;
  }else{
    if(holdButtons[i]){
      playerHand[i].hold=!playerHand[i].hold;
if(!panelLights[2]&&!panelLights[3]&&!panelLights[4]&&!panelLights[5]&&!panelLights[6])
if(playerHand[i].hold)
switch(i){
  case 0:digitalWrite(A1,HIGH);break;
  case 1:digitalWrite(A2,HIGH);break;
  case 2:digitalWrite(A3,HIGH);break;
  case 3:digitalWrite(A4,HIGH);break;
  case 4:digitalWrite(A5,HIGH);break;
}else switch(i){
  case 0:digitalWrite(A1,LOW);break;
  case 1:digitalWrite(A2,LOW);break;
  case 2:digitalWrite(A3,LOW);break;
  case 3:digitalWrite(A4,LOW);break;
  case 4:digitalWrite(A5,LOW);break;
}
      repaint();
      delay(50);
      holdButtons[i] = false;
    }
  }
  }
}
  if(mode%2==0){
    if(digitalRead(8) == LOW){
    betOne = true;
  }else{
    if(betOne){
      saved.bet++;
      if(saved.bet>min(saved.credits,5))saved.bet=1;
      repaint();
      delay(50);
      betOne = false;
    }
  }
  if(digitalRead(11)==LOW){
    betMax = true;
  }else{
    if(betMax){
      saved.bet=min(5,saved.credits);
      repaint();
      delay(50);
      betMax = false;
    }
  }if(digitalRead(12)==LOW){
    if(saved.credits<1)return;
    cashOut = true;
  }else{
    if(cashOut){
    if(default_credits<1){
      unsigned long n=0;
      TV.bitmap(0,0,CONFIRM_CASH_OUT);while(digitalRead(12)==HIGH&&n<5000){
        delay(1);n++;toggleLights();
      }
       if(n>=5000){
        cashOut=false;return;
       }
        saved.credits=0;paid=cashOut=false;return;
      }
      EEPROM.put(21,saved);
      TV.println("Game saved");
      delay(2500);
      repaint();
      cashOut = false;
    }
  }
  }
    if(digitalRead(10) == LOW&&gameStarted){
      if(Jackpot){
        Jackpot=false;
        for(int i=2;i<7;i++)panelLights[i]=false;
        repaint();
        return;
      }
      if(selGame==0){
        repaint();
        return;
      }
    dealDraw = true;
  }else{
     if(dealDraw){
     switch(mode%2){
        case 0:saved.credits-=saved.bet;if(saved.credits<1){panelLights[0]=panelLights[1]=false;break;}newHand();break;
        case 1:draw();saved.credits+=saved.bet*getPayout(evaluateHand(playerHand),selGame);repaint();if(evaluateHand(playerHand)==10){
          delay(5000);Jackpot=true;for(int i=2;i<7;i++)panelLights[i]=true;dealDraw=false;return;
        }break;
     }
      delay(50);
     dealDraw = false;
    }
  }
}
